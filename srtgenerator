#!/usr/bin/env python3
import argparse
import datetime


import moviepy # pip3 install moviepy
import moviepy.editor


def process_file(opts):
    xx="process_file"
    filename=opts.filename
    with open(filename,"r") as f:
        lines = f.readlines() 
    # print(xx,"lines",lines)
    videofile=opts.videofile
    if not videofile:
        videofile=filename[:-3]+"mp4"
    video = moviepy.editor.VideoFileClip(videofile)
    video_duration = int(video.duration)
    print(xx,"video_duration",video_duration)
    nblines=len(lines)
    print(xx,"nblines",nblines)
    linesstr=''.join(lines)
    plusnb=linesstr.count('+')
    print(xx,"plusnb",plusnb)

    plusdivider=4 # 2 will add hal, 3 wll add one thridd
    timeperline=video_duration/(nblines+plusnb/plusdivider+1)
    print(xx,"timeperline",timeperline)
    i=1
    out=[]
    old_start=0
    
    for line in lines:
        lineclean=line.strip()
        lineplusnb=lineclean.count('+')
        lineclean=lineclean.replace('+', '')
        out.append(str(i))
        start=old_start+0.001
        end=start+(1+lineplusnb/plusdivider)*timeperline
        
        tstart=datetime.datetime.utcfromtimestamp(start).time()
        tend=datetime.datetime.utcfromtimestamp(end).time()
        # print(xx,"tstart",tstart)
        # print(dir(tstart))
        theformat="%H:%M:%S,%f"
        isostart=tstart.strftime(theformat)
        isoend=tend.strftime(theformat)

        out.append(isostart[:-3]+" --> "+isoend[:-3])
        if lineclean=='':
            lineclean=''
        out.append(lineclean)
        out.append('')
        old_start=end
        i=i+1
    # print(xx,out)
    outfile=filename[:-3]+'srt'
    print(xx,"writing to",outfile)
    f=open(outfile, "w")
    f.write("\n".join(out))
    f.close()
    
def parse_cli():
    xx="parse_cli"
    parser = argparse.ArgumentParser(description="""Takes a TXT file and a duration and convert it to a SRT file to be tuned with gaupol. White lines add extra space in time.
Use the + character in the txt file to slow down, by hal, or full whute line

Then use gaupol to tune:
https://github.com/otsaloma/gaupol/blob/master/doc/creating-subtitles.md
Q-W and E-R, O to repear
""",formatter_class=argparse.RawTextHelpFormatter)
    parser.add_argument('filename',help="the txt file to convert")
    parser.add_argument('-d','--duration',help="the duration in seconds",default=180,type=int)
    parser.add_argument('-v','--videofile',help="look at this video file to get the duration in seconds")
    opts = parser.parse_args()
    print(xx,"opts:",opts)
    return opts




if __name__ == "__main__":
    opts=parse_cli()
    process_file(opts)
